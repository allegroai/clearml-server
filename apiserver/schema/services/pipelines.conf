_description: "Provides a management API for pipelines in the system."
_definitions {
    include "_common.conf"
}
delete_runs {
    "2.26": ${_definitions.batch_operation} {
        description: Delete pipeline runs
        request {
            required: [ids, project]
            properties {
                ids.description: "IDs of the pipeline runs to delete. Should be the ids of pipeline controller tasks"
                project {
                    description: "Pipeline project ids. When deleting at least one run should be left"
                    type: string
                }
            }
        }
        response {
            properties {
                succeeded.items.properties.deleted {
                    description: "Indicates whether the task was deleted"
                    type: boolean
                }
                succeeded.items.properties.updated_children {
                    description: "Number of child tasks whose parent property was updated"
                    type: integer
                }
                succeeded.items.properties.updated_models {
                    description: "Number of models whose task property was updated"
                    type: integer
                }
                succeeded.items.properties.deleted_models {
                    description: "Number of deleted output models"
                    type: integer
                }
            }
        }
    }
}
start_pipeline {
    "2.17" {
        description: "Start a pipeline"
        request {
            type: object
            required: [ task ]
            properties {
                task {
                    description: "ID of the task on which the pipeline will be based"
                    type: string
                }
                queue {
                    description: "Queue ID in which the created pipeline task will be enqueued"
                    type: string
                }
                args {
                    description: "Task arguments, name/value to be placed in the hyperparameters Args section"
                    type: array
                    items {
                        type: object
                        properties {
                            name: { type: string }
                            value: { type: string }
                        }
                    }
                }
            }
        }
        response {
            type: object
            properties {
                pipeline {
                    description: "ID of the new pipeline task"
                    type: string
                }
                enqueued {
                    description: "True if the task was successfuly enqueued"
                    type: boolean
                }
            }
        }
    }
    "2.28": ${start_pipeline."2.17"} {
        request.properties.verify_watched_queue {
            description: If passed then check wheter there are any workers watiching the queue
            type: boolean
            default: false
        }
        response.properties.queue_watched {
            description: Returns true if there are workers or autscalers working with the queue
            type: boolean
        }
    }
}
create_pipeline {
    "2.1" {
        description: "Create a new pipeline"
        request {
            type: object
            required :[name]
            properties {
                name {
                    description: "Pipeline name Unique within the company."
                    type: string
                }
                description {
                    description: "Pipeline description."
                    type: string
                }
                project {
                    description: "Project name."
                    type: string
                }
                tags {
                    description: "User-defined tags"
                    type: array
                    items { type: string }
                }
                system_tags {
                    description: "System tags. This field is reserved for system use, please don't use it."
                    type: array
                    items { type: string }
                }
                default_output_destination  {
                    description: "The default output destination URL for new tasks under this project"
                    type: string
                }
                parameters {
                    description: "Pipeline arguments"
                    type: array
                    items {
                        type: object
                        properties {
                            name: { type: string }
                            default: { type: string }
                            description: {type:string}
                            param_type : {type: string}

                        }
                    }
                }
            }
        }
        response {
            type: object
            properties {
                id {
                    description: "Pipeline id"
                    type: string
                }
            }
        }
    }
}
get_by_id {
    "2.1" {
        description: "Pipeline information by id"
        request {
            type: object
            required: [ pipeline ]
            properties {
                pipeline {
                    description: "Pipeline id"
                    type: string
                }
            }
        }
        response {
            type: object
            properties {
                pipeline {
                    description: "Pipeline info"
                    "$ref": "#/definitions/Pipeline"
                }
            }
        }
    }
}
create_node {
    "2.1" {
        description: "Create a new node"
        request {
            type: object
            required :[name, experiment]
            properties {
                pipeline_id {
                    description: "The identifier of the related Pipeline."
                    type : string
                }
                name {
                    description: "Pipeline name Unique within the company."
                    type: string
                }
                experiment  {
                    description: "The existing base experiment to be added in pipeline"
                    type: string
                }
                experiment_details  {
                    description: "The experiment details"
                    type: dict
                }
                description {
                    description :"node description"
                    type : string
                }
                code {
                    description :"node code"
                    type : string
                }
                parameters {
                    description: "node arguments"
                    type: array
                    items {
                        type: object
                        properties {
                            name: { type: string }
                            default: { type: string }
                            description: {type:string}
                            param_type : {type: string}

                        }
                    }
                }
            }
        }
        response {
            type: object
            properties {
                id {
                    description: "node id"
                    type: string
                }
            }
        }
    }
}
node_get_by_id {
    "2.1" {
        description: "Pipeline step information by id"
        request {
            type: object
            required: [ pipeline, node ]
            properties {
                pipeline {
                    description: "pipeline id"
                    type: string
                },
                node {
                    description: "node id"
                    type: string
                },
            }
        }
        response {
            type: object
            properties {
                project {
                    description: "Pipeline node info"
                    "$ref": "#/definitions/PipelineNode"
                }
            }
        }
    }
}
update_pipeline {
    "2.1" {
        description: "Update the pipeline data"
        request {
            type: object
            required :[pipeline_id]
            properties {
                pipeline_id {
                    description: "The identifier of the related Pipeline."
                    type : string
                }
                flow_display  {
                    description: "The flow of pipeline."
                    type: object
                }
                parameters {
                    description: "Step arguments"
                    type: array
                    items {
                        type: object
                        properties {
                            name: { type: string }
                            default: { type: string }
                            description: {type:string}
                            param_type : {type: string}

                        }
                    }
                }
            }
        }
        response {
            type: string
            properties {
                msg {
                    description: "Pipeline updated message"
                    type: string
                }
            }
        }
    }
}
update_node {
    "2.1" {
        description: "update a node"
        request {
            type: object
            required :[node_id]
            properties {
                node_id {
                    description: "The identifier of the related Pipeline."
                    type : string
                }
                parameters {
                    description: "node arguments"
                    type: array
                    items { type: string }
                }
                    }
                }
        response {
            type: string
            properties {
                msg {
                    description: "Pipeline updated message"
                    type: string
                }
            }
        }
    }
}
compile {
    "2.1" {
        description: "pipeline compile"
        request {
            type: object
            properties {
                pipeline_id {
                    description: "The identifier of the related Pipeline."
                    type : string
                }
                steps {
                    description: "Steps"
                    type: array
                    items { type: string }
                }
                connection {
                    description: "connection"
                    type: array
                    items { type: string }
                }
                    }
                }
        response {
            type: string
            properties {
                msg {
                    description: "Pipeline compiled message"
                    type: string
                }
            }
        }
    }
}
run {
    "2.1" {
        description: "run  pipeline"
        request {
            type: object
            properties {
                pipeline_id {
                    description: "The identifier of the related Pipeline."
                    type : string
                }
                    }
                }
        response {
            type: string
            properties {
                msg {
                    description: "Pipeline executed successfully."
                    type: string
                }
            }
        }
    }
}
delete_node {
    "2.1" {
        description: "Pipeline step delete by id"
        request {
            type: object
            required: [ pipeline, node ]
            properties {
                pipeline {
                    description: "pipeline id"
                    type: string
                }
                node {
                    description: "node id"
                    type: string
                }
            }
        }
        response {
            type: string
            properties {
                msg {
                    description: "step deletion msg."
                    type: string
                }
            }
        }
    }
}